{"version":3,"file":"ng-whiteboard.js","sources":["../../../projects/ng-whiteboard/src/lib/ng-whiteboard.types.ts","../../../projects/ng-whiteboard/src/lib/ng-whiteboard.service.ts","../../../projects/ng-whiteboard/src/lib/ng-whiteboard.component.ts","../../../projects/ng-whiteboard/src/lib/ng-whiteboard.module.ts"],"sourcesContent":["export class WhiteboardOptions {\n  color = '#000000';\n  backgroundColor = '#ffffff';\n  size = '5px';\n  linejoin: 'miter' | 'round' | 'bevel' | 'miter-clip' | 'arcs' = 'round';\n  linecap: 'butt' | 'square' | 'round' = 'round';\n}\n\nexport interface ActionStack {\n  type: ActionType;\n  line?: SVGPathElement;\n  image?: SVGGElement;\n}\n\nexport enum ActionType {\n  Line,\n  Image,\n}\n\nexport type formatTypes = 'png' | 'jpeg' | 'svg' | 'base64';\n\nexport enum FormatType {\n  Png = 'png',\n  Jpeg = 'jpeg',\n  Svg = 'svg',\n  Base64 = 'base64',\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormatType, formatTypes } from './ng-whiteboard.types';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgWhiteboardService {\n  // Observable string sources\n  private eraseSvgMethodCallSource = new Subject<any>();\n  private saveSvgMethodCallSource = new Subject<{ name: string; format: formatTypes }>();\n  private undoSvgMethodCallSource = new Subject<any>();\n  private redoSvgMethodCallSource = new Subject<any>();\n  private addImageMethodCallSource = new Subject<string | ArrayBuffer>();\n\n  // Observable string streams\n  eraseSvgMethodCalled$ = this.eraseSvgMethodCallSource.asObservable();\n  saveSvgMethodCalled$ = this.saveSvgMethodCallSource.asObservable();\n  undoSvgMethodCalled$ = this.undoSvgMethodCallSource.asObservable();\n  redoSvgMethodCalled$ = this.redoSvgMethodCallSource.asObservable();\n  addImageMethodCalled$ = this.addImageMethodCallSource.asObservable();\n\n  // Service message commands\n  public erase(): void {\n    this.eraseSvgMethodCallSource.next();\n  }\n  public save(format: formatTypes = FormatType.Png, name: string = 'New image'): void {\n    this.saveSvgMethodCallSource.next({ name, format });\n  }\n  public undo(): void {\n    this.undoSvgMethodCallSource.next();\n  }\n  public redo(): void {\n    this.redoSvgMethodCallSource.next();\n  }\n  public addImage(image: string | ArrayBuffer): void {\n    this.addImageMethodCallSource.next(image);\n  }\n}\n","import { Component, AfterViewInit, ViewChild, Input, ElementRef, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { NgWhiteboardService } from './ng-whiteboard.service';\nimport { Subscription } from 'rxjs';\nimport { WhiteboardOptions, ActionStack, ActionType, FormatType, formatTypes } from './ng-whiteboard.types';\nimport { ContainerElement, curveBasis, select, drag, Selection, line, event, mouse } from 'd3';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ng-whiteboard',\n  template: `\n    <svg #svgContainer [style.background-color]=\"this.backgroundColor || this.whiteboardOptions.backgroundColor\"></svg>\n  `,\n  styleUrls: ['ng-whiteboard.component.scss'],\n})\nexport class NgWhiteboardComponent implements AfterViewInit, OnDestroy {\n  @ViewChild('svgContainer', { static: false }) private svgContainer: ElementRef<ContainerElement>;\n  @Input() whiteboardOptions: WhiteboardOptions = new WhiteboardOptions();\n  @Input() color: string;\n  @Input() backgroundColor: string;\n  @Input() size: string;\n  @Input() linejoin: 'miter' | 'round' | 'bevel' | 'miter-clip' | 'arcs';\n  @Input() linecap: 'butt' | 'square' | 'round';\n\n  @Output() init = new EventEmitter();\n  @Output() clear = new EventEmitter();\n  @Output() undo = new EventEmitter();\n  @Output() redo = new EventEmitter();\n  @Output() save = new EventEmitter<string | Blob>();\n  @Output() imageAdded = new EventEmitter();\n\n  private selection: Selection<any, unknown, null, undefined> = undefined;\n\n  private subscriptionList: Subscription[] = [];\n\n  private undoStack: ActionStack[] = [];\n  private redoStack: ActionStack[] = [];\n\n  constructor(private whiteboardService: NgWhiteboardService) {}\n\n  ngAfterViewInit() {\n    this.subscriptionList.push(\n      this.whiteboardService.eraseSvgMethodCalled$.subscribe(() => this.eraseSvg(this.selection))\n    );\n\n    this.subscriptionList.push(\n      this.whiteboardService.saveSvgMethodCalled$.subscribe(({ name, format }) => this.saveSvg(name, format))\n    );\n    this.subscriptionList.push(this.whiteboardService.undoSvgMethodCalled$.subscribe(() => this.undoDraw()));\n    this.subscriptionList.push(this.whiteboardService.redoSvgMethodCalled$.subscribe(() => this.redoDraw()));\n    this.subscriptionList.push(this.whiteboardService.addImageMethodCalled$.subscribe((image) => this.addImage(image)));\n\n    this.selection = this.initSvg(this.svgContainer.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptionList.forEach((subscription) => this._unsubscribe(subscription));\n  }\n\n  private initSvg(selector: ContainerElement) {\n    const d3Line = line().curve(curveBasis);\n    const svg = select(selector).call(\n      drag()\n        .container(selector)\n        .subject(() => {\n          const p = [event.x, event.y];\n          return [p, p];\n        })\n        .on('start', () => {\n          const d = event.subject;\n          const active = svg\n            .append('path')\n            .datum(d)\n            .attr('class', 'line')\n            .attr(\n              'style',\n              `\n           fill: none;\n           stroke: ${this.color || this.whiteboardOptions.color};\n           stroke-width: ${this.size || this.whiteboardOptions.size};\n           stroke-linejoin: ${this.linejoin || this.whiteboardOptions.linejoin};\n           stroke-linecap: ${this.linecap || this.whiteboardOptions.linecap};\n           `\n            );\n          active.attr('d', d3Line);\n          event.on('drag', function () {\n            active.datum().push(mouse(this));\n            active.attr('d', d3Line);\n          });\n          event.on('end', () => {\n            active.attr('d', d3Line);\n            if (this.undoStack.length < 1) {\n              this.redoStack = [];\n            }\n            this.undoStack.push({ type: ActionType.Line, line: active.node() });\n          });\n        })\n    );\n    this.init.emit();\n    return svg;\n  }\n\n  private addImage(image: string | ArrayBuffer) {\n    this.drawImage(image);\n  }\n\n  private eraseSvg(svg: Selection<any, unknown, null, undefined>) {\n    svg.selectAll('*').remove();\n    this.undoStack = [];\n    this.redoStack = [];\n    this.clear.emit();\n  }\n\n  private saveSvg(name, format: formatTypes) {\n    const svgString = this.saveAsSvg(this.selection.clone(true).node());\n    switch (format) {\n      case FormatType.Base64:\n        this.svgString2Image(\n          svgString,\n          Number(this.selection.style('width').replace('px', '')),\n          Number(this.selection.style('height').replace('px', '')),\n          format,\n          (img) => {\n            this.save.emit(img);\n          }\n        );\n        break;\n      case FormatType.Svg:\n        const imgSrc = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgString)));\n        this.download(imgSrc, name);\n        this.save.emit(imgSrc);\n        break;\n      default:\n        this.svgString2Image(\n          svgString,\n          Number(this.selection.style('width').replace('px', '')),\n          Number(this.selection.style('height').replace('px', '')),\n          format,\n          (img) => {\n            this.download(img, name);\n            this.save.emit(img);\n          }\n        );\n        break;\n    }\n  }\n\n  private undoDraw() {\n    if (!this.undoStack.length) {\n      return;\n    }\n    this.redoStack.push(this.undoStack.pop());\n    this.selection.selectAll('.line').remove();\n    this.undoStack.forEach((action) => {\n      if (action.type === ActionType.Line) {\n        this.drawLine(action.line);\n      } else if (action.type === ActionType.Image) {\n        this.drawLine(action.image);\n      }\n    });\n    this.undo.emit();\n  }\n\n  private redoDraw() {\n    if (!this.redoStack.length) {\n      return;\n    }\n    this.undoStack.push(this.redoStack.pop());\n    this.selection.selectAll('.line').remove();\n    this.undoStack.forEach((action) => {\n      if (action.type === ActionType.Line) {\n        this.drawLine(action.line);\n      } else if (action.type === ActionType.Image) {\n        this.drawLine(action.image);\n      }\n    });\n    this.redo.emit();\n  }\n\n  private drawLine(pathNode: SVGPathElement | SVGGElement) {\n    this.selection.node().appendChild(pathNode);\n  }\n\n  private drawImage(image: string | ArrayBuffer) {\n    const group = this.selection\n      .append('g')\n      .data([{ x: 20, y: 20, r: 1, scale: 1 }])\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('transform', 'translate(0,0)');\n\n    const tempImg = new Image();\n    tempImg.onload = () => {\n      const aspectRatio = tempImg.width / tempImg.height;\n      const height =\n        tempImg.height > Number(this.selection.style('height').replace('px', ''))\n          ? Number(this.selection.style('height').replace('px', '')) - 40\n          : tempImg.height;\n      const width =\n        height === Number(this.selection.style('height').replace('px', '')) - 40\n          ? (Number(this.selection.style('height').replace('px', '')) - 40) * aspectRatio\n          : tempImg.width;\n      group\n        .append('image')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', height)\n        .attr('width', width)\n        .attr('preserveAspectRatio', 'none')\n        .attr('xlink:href', image.toString());\n\n      group\n        .append('rect')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('width', 20)\n        .attr('height', 20)\n        .style('opacity', 0)\n        .attr('fill', (d) => {\n          return '#cccccc';\n        })\n        .call(\n          drag()\n            .subject(() => {\n              const p = [event.x, event.y];\n              return [p, p];\n            })\n            .on('start', () => {\n              event.on('drag', function (d) {\n                const cursor = select(this);\n                const cord = mouse(this);\n\n                d.x += cord[0] - Number(cursor.attr('width')) / 2;\n                d.y += cord[1] - Number(cursor.attr('height')) / 2;\n                select(this.parentNode).attr('transform', () => {\n                  return (\n                    'translate(' + [d.x, d.y] + '),rotate(' + 0 + ',160, 160),scale(' + d.scale + ',' + d.scale + ')'\n                  );\n                });\n              });\n            })\n        );\n      group\n        .on('mouseover', function () {\n          select(this).select('rect').style('opacity', 1.0);\n        })\n        .on('mouseout', function () {\n          select(this).select('rect').style('opacity', 0);\n        });\n      // this.undoStack.push({ type: ActionType.Image, image: group.node() });\n    };\n    tempImg.src = image.toString();\n  }\n\n  private _unsubscribe(subscription: Subscription): void {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n  }\n\n  private svgString2Image(\n    svgString: string,\n    width: number,\n    height: number,\n    format: string,\n    callback: (img: string) => void\n  ) {\n    // set default for format parameter\n    format = format || 'png';\n    // SVG data URL from SVG string\n    const svgData = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgString)));\n    // create canvas in memory(not in DOM)\n    const canvas = document.createElement('canvas');\n    // get canvas context for drawing on canvas\n    const context = canvas.getContext('2d');\n    // set canvas size\n    canvas.width = width;\n    canvas.height = height;\n    // create image in memory(not in DOM)\n    const image = new Image();\n    // later when image loads run this\n    image.onload = () => {\n      // async (happens later)\n      // clear canvas\n      context.clearRect(0, 0, width, height);\n      // draw image with SVG data to canvas\n      context.drawImage(image, 0, 0, width, height);\n      // snapshot canvas as png\n      const pngData = canvas.toDataURL('image/' + format);\n      // pass png data URL to callback\n      callback(pngData);\n    }; // end async\n    // start loading SVG data into in memory image\n    image.src = svgData;\n  }\n\n  private saveAsSvg(svgNode): string {\n    svgNode.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n\n    // Set width and height for svg element\n    svgNode.setAttribute('width', Number(this.selection.style('width').replace('px', '')));\n    svgNode.setAttribute('height', Number(this.selection.style('height').replace('px', '')));\n\n    const serializer = new XMLSerializer();\n    let svgString = serializer.serializeToString(svgNode);\n    svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink='); // Fix root xlink without namespace\n    svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href');\n    return svgString;\n  }\n\n  private download(url: string, name: string): void {\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('visibility', 'hidden');\n    link.download = name || 'new white-board';\n    document.body.appendChild(link);\n    link.click();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgWhiteboardComponent } from './ng-whiteboard.component';\n\n@NgModule({\n  declarations: [NgWhiteboardComponent],\n  imports: [],\n  exports: [NgWhiteboardComponent]\n})\nexport class NgWhiteboardModule {}\n"],"names":[],"mappings":";;;;;;;;;;MAAa,iBAAiB;IAA9B;QACE,UAAK,GAAG,SAAS,CAAC;QAClB,oBAAe,GAAG,SAAS,CAAC;QAC5B,SAAI,GAAG,KAAK,CAAC;QACb,aAAQ,GAAwD,OAAO,CAAC;QACxE,YAAO,GAAgC,OAAO,CAAC;KAChD;CAAA;;;IALC,kCAAkB;;IAClB,4CAA4B;;IAC5B,iCAAa;;IACb,qCAAwE;;IACxE,oCAA+C;;;;;0BAOhD;;;IAHC,2BAAiB;;IACjB,2BAAsB;;IACtB,4BAAoB;;;MAGV,UAAU;IACpB,IAAI,GAAA;IACJ,KAAK,GAAA;EACN;;;;MAIW,UAAU;IACpB,GAAG,OAAQ;IACX,IAAI,QAAS;IACb,GAAG,OAAQ;IACX,MAAM,UAAW;;;;;;;;MClBN,mBAAmB;IAHhC;;QAKU,6BAAwB,GAAG,IAAI,OAAO,EAAO,CAAC;QAC9C,4BAAuB,GAAG,IAAI,OAAO,EAAyC,CAAC;QAC/E,4BAAuB,GAAG,IAAI,OAAO,EAAO,CAAC;QAC7C,4BAAuB,GAAG,IAAI,OAAO,EAAO,CAAC;QAC7C,6BAAwB,GAAG,IAAI,OAAO,EAAwB,CAAC;;QAGvE,0BAAqB,GAAG,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,CAAC;QACrE,yBAAoB,GAAG,IAAI,CAAC,uBAAuB,CAAC,YAAY,EAAE,CAAC;QACnE,yBAAoB,GAAG,IAAI,CAAC,uBAAuB,CAAC,YAAY,EAAE,CAAC;QACnE,yBAAoB,GAAG,IAAI,CAAC,uBAAuB,CAAC,YAAY,EAAE,CAAC;QACnE,0BAAqB,GAAG,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,CAAC;KAkBtE;;;;;IAfQ,KAAK;QACV,IAAI,CAAC,wBAAwB,CAAC,IAAI,EAAE,CAAC;KACtC;;;;;;IACM,IAAI,CAAC,SAAsB,UAAU,CAAC,GAAG,EAAE,OAAe,WAAW;QAC1E,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;KACrD;;;;IACM,IAAI;QACT,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;KACrC;;;;IACM,IAAI;QACT,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;KACrC;;;;;IACM,QAAQ,CAAC,KAA2B;QACzC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3C;;;YAjCF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;IAGC,uDAAsD;;;;;IACtD,sDAAuF;;;;;IACvF,sDAAqD;;;;;IACrD,sDAAqD;;;;;IACrD,uDAAuE;;IAGvE,oDAAqE;;IACrE,mDAAmE;;IACnE,mDAAmE;;IACnE,mDAAmE;;IACnE,oDAAqE;;;;;;;;MCN1D,qBAAqB;;;;IAuBhC,YAAoB,iBAAsC;QAAtC,sBAAiB,GAAjB,iBAAiB,CAAqB;QArBjD,sBAAiB,GAAsB,IAAI,iBAAiB,EAAE,CAAC;QAO9D,SAAI,GAAG,IAAI,YAAY,EAAE,CAAC;QAC1B,UAAK,GAAG,IAAI,YAAY,EAAE,CAAC;QAC3B,SAAI,GAAG,IAAI,YAAY,EAAE,CAAC;QAC1B,SAAI,GAAG,IAAI,YAAY,EAAE,CAAC;QAC1B,SAAI,GAAG,IAAI,YAAY,EAAiB,CAAC;QACzC,eAAU,GAAG,IAAI,YAAY,EAAE,CAAC;QAElC,cAAS,GAA6C,SAAS,CAAC;QAEhE,qBAAgB,GAAmB,EAAE,CAAC;QAEtC,cAAS,GAAkB,EAAE,CAAC;QAC9B,cAAS,GAAkB,EAAE,CAAC;KAEwB;;;;IAE9D,eAAe;QACb,IAAI,CAAC,gBAAgB,CAAC,IAAI,CACxB,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,SAAS;;;QAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC,CAC5F,CAAC;QAEF,IAAI,CAAC,gBAAgB,CAAC,IAAI,CACxB,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,SAAS;;;;QAAC,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,EAAC,CACxG,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,SAAS;;;QAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QACzG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,SAAS;;;QAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QACzG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,SAAS;;;;QAAC,CAAC,KAAK,KAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAC,CAAC,CAAC;QAEpH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;KAChE;;;;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,OAAO;;;;QAAC,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAC,CAAC;KAClF;;;;;;IAEO,OAAO,CAAC,QAA0B;;cAClC,MAAM,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC;;cACjC,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC/B,IAAI,EAAE;aACH,SAAS,CAAC,QAAQ,CAAC;aACnB,OAAO;;;QAAC;;kBACD,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;YAC5B,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACf,EAAC;aACD,EAAE,CAAC,OAAO;;;QAAE;;kBACL,CAAC,GAAG,KAAK,CAAC,OAAO;;kBACjB,MAAM,GAAG,GAAG;iBACf,MAAM,CAAC,MAAM,CAAC;iBACd,KAAK,CAAC,CAAC,CAAC;iBACR,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;iBACrB,IAAI,CACH,OAAO,EACP;;qBAEO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK;2BACpC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI;8BACrC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ;6BACjD,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,iBAAiB,CAAC,OAAO;YAC/D,CACC;YACH,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YACzB,KAAK,CAAC,EAAE,CAAC,MAAM;;;YAAE;gBACf,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;aAC1B,EAAC,CAAC;YACH,KAAK,CAAC,EAAE,CAAC,KAAK;;;YAAE;gBACd,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC7B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;iBACrB;gBACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;aACrE,EAAC,CAAC;SACJ,EAAC,CACL;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACjB,OAAO,GAAG,CAAC;KACZ;;;;;;IAEO,QAAQ,CAAC,KAA2B;QAC1C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;KACvB;;;;;;IAEO,QAAQ,CAAC,GAA6C;QAC5D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACnB;;;;;;;IAEO,OAAO,CAAC,IAAI,EAAE,MAAmB;;cACjC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QACnE,QAAQ,MAAM;YACZ,KAAK,UAAU,CAAC,MAAM;gBACpB,IAAI,CAAC,eAAe,CAClB,SAAS,EACT,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EACvD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EACxD,MAAM;;;;gBACN,CAAC,GAAG;oBACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACrB,EACF,CAAC;gBACF,MAAM;YACR,KAAK,UAAU,CAAC,GAAG;;sBACX,MAAM,GAAG,4BAA4B,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC3F,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACvB,MAAM;YACR;gBACE,IAAI,CAAC,eAAe,CAClB,SAAS,EACT,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EACvD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EACxD,MAAM;;;;gBACN,CAAC,GAAG;oBACF,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;oBACzB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACrB,EACF,CAAC;gBACF,MAAM;SACT;KACF;;;;;IAEO,QAAQ;QACd,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YAC1B,OAAO;SACR;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC3C,IAAI,CAAC,SAAS,CAAC,OAAO;;;;QAAC,CAAC,MAAM;YAC5B,IAAI,MAAM,CAAC,IAAI,KAAK,UAAU,CAAC,IAAI,EAAE;gBACnC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC5B;iBAAM,IAAI,MAAM,CAAC,IAAI,KAAK,UAAU,CAAC,KAAK,EAAE;gBAC3C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aAC7B;SACF,EAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;KAClB;;;;;IAEO,QAAQ;QACd,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YAC1B,OAAO;SACR;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAC3C,IAAI,CAAC,SAAS,CAAC,OAAO;;;;QAAC,CAAC,MAAM;YAC5B,IAAI,MAAM,CAAC,IAAI,KAAK,UAAU,CAAC,IAAI,EAAE;gBACnC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC5B;iBAAM,IAAI,MAAM,CAAC,IAAI,KAAK,UAAU,CAAC,KAAK,EAAE;gBAC3C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aAC7B;SACF,EAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;KAClB;;;;;;IAEO,QAAQ,CAAC,QAAsC;QACrD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KAC7C;;;;;;IAEO,SAAS,CAAC,KAA2B;;cACrC,KAAK,GAAG,IAAI,CAAC,SAAS;aACzB,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;aACxC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;aACZ,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;aACZ,IAAI,CAAC,WAAW,EAAE,gBAAgB,CAAC;;cAEhC,OAAO,GAAG,IAAI,KAAK,EAAE;QAC3B,OAAO,CAAC,MAAM;;;QAAG;;kBACT,WAAW,GAAG,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM;;kBAC5C,MAAM,GACV,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;kBACrE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE;kBAC7D,OAAO,CAAC,MAAM;;kBACd,KAAK,GACT,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE;kBACpE,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,WAAW;kBAC7E,OAAO,CAAC,KAAK;YACnB,KAAK;iBACF,MAAM,CAAC,OAAO,CAAC;iBACf,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;iBACZ,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;iBACZ,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC;iBACtB,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;iBACpB,IAAI,CAAC,qBAAqB,EAAE,MAAM,CAAC;iBACnC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;YAExC,KAAK;iBACF,MAAM,CAAC,MAAM,CAAC;iBACd,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;iBACZ,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;iBACZ,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;iBACjB,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;iBAClB,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;iBACnB,IAAI,CAAC,MAAM;;;;YAAE,CAAC,CAAC;gBACd,OAAO,SAAS,CAAC;aAClB,EAAC;iBACD,IAAI,CACH,IAAI,EAAE;iBACH,OAAO;;;YAAC;;sBACD,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;gBAC5B,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACf,EAAC;iBACD,EAAE,CAAC,OAAO;;;YAAE;gBACX,KAAK,CAAC,EAAE,CAAC,MAAM;;;;gBAAE,UAAU,CAAC;;0BACpB,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC;;0BACrB,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;oBAExB,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;oBAClD,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;oBACnD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,WAAW;;;oBAAE;wBACxC,QACE,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,GAAG,CAAC,GAAG,mBAAmB,GAAG,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,GAAG,GAAG,EACjG;qBACH,EAAC,CAAC;iBACJ,EAAC,CAAC;aACJ,EAAC,CACL,CAAC;YACJ,KAAK;iBACF,EAAE,CAAC,WAAW;;;YAAE;gBACf,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;aACnD,EAAC;iBACD,EAAE,CAAC,UAAU;;;YAAE;gBACd,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;aACjD,EAAC,CAAC;;SAEN,CAAA,CAAC;QACF,OAAO,CAAC,GAAG,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;KAChC;;;;;;IAEO,YAAY,CAAC,YAA0B;QAC7C,IAAI,YAAY,EAAE;YAChB,YAAY,CAAC,WAAW,EAAE,CAAC;SAC5B;KACF;;;;;;;;;;IAEO,eAAe,CACrB,SAAiB,EACjB,KAAa,EACb,MAAc,EACd,MAAc,EACd,QAA+B;;QAG/B,MAAM,GAAG,MAAM,IAAI,KAAK,CAAC;;;cAEnB,OAAO,GAAG,4BAA4B,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;;cAEtF,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;;;cAEzC,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;;QAEvC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;;;cAEjB,KAAK,GAAG,IAAI,KAAK,EAAE;;QAEzB,KAAK,CAAC,MAAM;;;QAAG;;;YAGb,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;;YAEvC,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;;;kBAExC,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,MAAM,CAAC;;YAEnD,QAAQ,CAAC,OAAO,CAAC,CAAC;SACnB,CAAA,CAAC;;QAEF,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;KACrB;;;;;;IAEO,SAAS,CAAC,OAAO;QACvB,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,8BAA8B,CAAC,CAAC;;QAG9D,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QACvF,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;;cAEnF,UAAU,GAAG,IAAI,aAAa,EAAE;;YAClC,SAAS,GAAG,UAAU,CAAC,iBAAiB,CAAC,OAAO,CAAC;QACrD,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;QACjE,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;QAC3D,OAAO,SAAS,CAAC;KAClB;;;;;;;IAEO,QAAQ,CAAC,GAAW,EAAE,IAAY;;cAClC,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC;QACxC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,iBAAiB,CAAC;QAC1C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,EAAE,CAAC;KACd;;;YAtTF,SAAS,SAAC;;gBAET,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE;;GAET;;aAEF;;;;YAZQ,mBAAmB;;;2BAczB,SAAS,SAAC,cAAc,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;gCAC3C,KAAK;oBACL,KAAK;8BACL,KAAK;mBACL,KAAK;uBACL,KAAK;sBACL,KAAK;mBAEL,MAAM;oBACN,MAAM;mBACN,MAAM;mBACN,MAAM;mBACN,MAAM;yBACN,MAAM;;;;;;;IAbP,6CAAiG;;IACjG,kDAAwE;;IACxE,sCAAuB;;IACvB,gDAAiC;;IACjC,qCAAsB;;IACtB,yCAAuE;;IACvE,wCAA8C;;IAE9C,qCAAoC;;IACpC,sCAAqC;;IACrC,qCAAoC;;IACpC,qCAAoC;;IACpC,qCAAmD;;IACnD,2CAA0C;;;;;IAE1C,0CAAwE;;;;;IAExE,iDAA8C;;;;;IAE9C,0CAAsC;;;;;IACtC,0CAAsC;;;;;IAE1B,kDAA8C;;;;;;;;MC7B/C,kBAAkB;;;YAL9B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,qBAAqB,CAAC;gBACrC,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,CAAC,qBAAqB,CAAC;aACjC;;;;;;;;;;;;;;;;;"}