{"version":3,"file":"ng-whiteboard.umd.js","sources":["../../../projects/ng-whiteboard/src/lib/ng-whiteboard.types.ts","../../../projects/ng-whiteboard/src/lib/ng-whiteboard.service.ts","../../../projects/ng-whiteboard/src/lib/ng-whiteboard.component.ts","../../../projects/ng-whiteboard/src/lib/ng-whiteboard.module.ts"],"sourcesContent":["export class WhiteboardOptions {\n  color = '#000000';\n  backgroundColor = '#ffffff';\n  size = '5px';\n  linejoin: 'miter' | 'round' | 'bevel' | 'miter-clip' | 'arcs' = 'round';\n  linecap: 'butt' | 'square' | 'round' = 'round';\n}\n\nexport interface ActionStack {\n  type: ActionType;\n  line?: SVGPathElement;\n  image?: SVGGElement;\n}\n\nexport enum ActionType {\n  Line,\n  Image,\n}\n\nexport type formatTypes = 'png' | 'jpeg' | 'svg' | 'base64';\n\nexport enum FormatType {\n  Png = 'png',\n  Jpeg = 'jpeg',\n  Svg = 'svg',\n  Base64 = 'base64',\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormatType, formatTypes } from './ng-whiteboard.types';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgWhiteboardService {\n  // Observable string sources\n  private eraseSvgMethodCallSource = new Subject<any>();\n  private saveSvgMethodCallSource = new Subject<{ name: string; format: formatTypes }>();\n  private undoSvgMethodCallSource = new Subject<any>();\n  private redoSvgMethodCallSource = new Subject<any>();\n  private addImageMethodCallSource = new Subject<string | ArrayBuffer>();\n\n  // Observable string streams\n  eraseSvgMethodCalled$ = this.eraseSvgMethodCallSource.asObservable();\n  saveSvgMethodCalled$ = this.saveSvgMethodCallSource.asObservable();\n  undoSvgMethodCalled$ = this.undoSvgMethodCallSource.asObservable();\n  redoSvgMethodCalled$ = this.redoSvgMethodCallSource.asObservable();\n  addImageMethodCalled$ = this.addImageMethodCallSource.asObservable();\n\n  // Service message commands\n  public erase(): void {\n    this.eraseSvgMethodCallSource.next();\n  }\n  public save(format: formatTypes = FormatType.Png, name: string = 'New image'): void {\n    this.saveSvgMethodCallSource.next({ name, format });\n  }\n  public undo(): void {\n    this.undoSvgMethodCallSource.next();\n  }\n  public redo(): void {\n    this.redoSvgMethodCallSource.next();\n  }\n  public addImage(image: string | ArrayBuffer): void {\n    this.addImageMethodCallSource.next(image);\n  }\n}\n","import { Component, AfterViewInit, ViewChild, Input, ElementRef, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { NgWhiteboardService } from './ng-whiteboard.service';\nimport { Subscription } from 'rxjs';\nimport { WhiteboardOptions, ActionStack, ActionType, FormatType, formatTypes } from './ng-whiteboard.types';\nimport { ContainerElement, curveBasis, select, drag, Selection, line, event, mouse } from 'd3';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ng-whiteboard',\n  template: `\n    <svg #svgContainer [style.background-color]=\"this.backgroundColor || this.whiteboardOptions.backgroundColor\"></svg>\n  `,\n  styleUrls: ['ng-whiteboard.component.scss'],\n})\nexport class NgWhiteboardComponent implements AfterViewInit, OnDestroy {\n  @ViewChild('svgContainer', { static: false }) private svgContainer: ElementRef<ContainerElement>;\n  @Input() whiteboardOptions: WhiteboardOptions = new WhiteboardOptions();\n  @Input() color: string;\n  @Input() backgroundColor: string;\n  @Input() size: string;\n  @Input() linejoin: 'miter' | 'round' | 'bevel' | 'miter-clip' | 'arcs';\n  @Input() linecap: 'butt' | 'square' | 'round';\n\n  @Output() init = new EventEmitter();\n  @Output() clear = new EventEmitter();\n  @Output() undo = new EventEmitter();\n  @Output() redo = new EventEmitter();\n  @Output() save = new EventEmitter<string | Blob>();\n  @Output() imageAdded = new EventEmitter();\n\n  private selection: Selection<any, unknown, null, undefined> = undefined;\n\n  private subscriptionList: Subscription[] = [];\n\n  private undoStack: ActionStack[] = [];\n  private redoStack: ActionStack[] = [];\n\n  constructor(private whiteboardService: NgWhiteboardService) {}\n\n  ngAfterViewInit() {\n    this.subscriptionList.push(\n      this.whiteboardService.eraseSvgMethodCalled$.subscribe(() => this.eraseSvg(this.selection))\n    );\n\n    this.subscriptionList.push(\n      this.whiteboardService.saveSvgMethodCalled$.subscribe(({ name, format }) => this.saveSvg(name, format))\n    );\n    this.subscriptionList.push(this.whiteboardService.undoSvgMethodCalled$.subscribe(() => this.undoDraw()));\n    this.subscriptionList.push(this.whiteboardService.redoSvgMethodCalled$.subscribe(() => this.redoDraw()));\n    this.subscriptionList.push(this.whiteboardService.addImageMethodCalled$.subscribe((image) => this.addImage(image)));\n\n    this.selection = this.initSvg(this.svgContainer.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptionList.forEach((subscription) => this._unsubscribe(subscription));\n  }\n\n  private initSvg(selector: ContainerElement) {\n    const d3Line = line().curve(curveBasis);\n    const svg = select(selector).call(\n      drag()\n        .container(selector)\n        .subject(() => {\n          const p = [event.x, event.y];\n          return [p, p];\n        })\n        .on('start', () => {\n          const d = event.subject;\n          const active = svg\n            .append('path')\n            .datum(d)\n            .attr('class', 'line')\n            .attr(\n              'style',\n              `\n           fill: none;\n           stroke: ${this.color || this.whiteboardOptions.color};\n           stroke-width: ${this.size || this.whiteboardOptions.size};\n           stroke-linejoin: ${this.linejoin || this.whiteboardOptions.linejoin};\n           stroke-linecap: ${this.linecap || this.whiteboardOptions.linecap};\n           `\n            );\n          active.attr('d', d3Line);\n          event.on('drag', function () {\n            active.datum().push(mouse(this));\n            active.attr('d', d3Line);\n          });\n          event.on('end', () => {\n            active.attr('d', d3Line);\n            if (this.undoStack.length < 1) {\n              this.redoStack = [];\n            }\n            this.undoStack.push({ type: ActionType.Line, line: active.node() });\n          });\n        })\n    );\n    this.init.emit();\n    return svg;\n  }\n\n  private addImage(image: string | ArrayBuffer) {\n    this.drawImage(image);\n  }\n\n  private eraseSvg(svg: Selection<any, unknown, null, undefined>) {\n    svg.selectAll('*').remove();\n    this.undoStack = [];\n    this.redoStack = [];\n    this.clear.emit();\n  }\n\n  private saveSvg(name, format: formatTypes) {\n    const svgString = this.saveAsSvg(this.selection.clone(true).node());\n    switch (format) {\n      case FormatType.Base64:\n        this.svgString2Image(\n          svgString,\n          Number(this.selection.style('width').replace('px', '')),\n          Number(this.selection.style('height').replace('px', '')),\n          format,\n          (img) => {\n            this.save.emit(img);\n          }\n        );\n        break;\n      case FormatType.Svg:\n        const imgSrc = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgString)));\n        this.download(imgSrc, name);\n        this.save.emit(imgSrc);\n        break;\n      default:\n        this.svgString2Image(\n          svgString,\n          Number(this.selection.style('width').replace('px', '')),\n          Number(this.selection.style('height').replace('px', '')),\n          format,\n          (img) => {\n            this.download(img, name);\n            this.save.emit(img);\n          }\n        );\n        break;\n    }\n  }\n\n  private undoDraw() {\n    if (!this.undoStack.length) {\n      return;\n    }\n    this.redoStack.push(this.undoStack.pop());\n    this.selection.selectAll('.line').remove();\n    this.undoStack.forEach((action) => {\n      if (action.type === ActionType.Line) {\n        this.drawLine(action.line);\n      } else if (action.type === ActionType.Image) {\n        this.drawLine(action.image);\n      }\n    });\n    this.undo.emit();\n  }\n\n  private redoDraw() {\n    if (!this.redoStack.length) {\n      return;\n    }\n    this.undoStack.push(this.redoStack.pop());\n    this.selection.selectAll('.line').remove();\n    this.undoStack.forEach((action) => {\n      if (action.type === ActionType.Line) {\n        this.drawLine(action.line);\n      } else if (action.type === ActionType.Image) {\n        this.drawLine(action.image);\n      }\n    });\n    this.redo.emit();\n  }\n\n  private drawLine(pathNode: SVGPathElement | SVGGElement) {\n    this.selection.node().appendChild(pathNode);\n  }\n\n  private drawImage(image: string | ArrayBuffer) {\n    const group = this.selection\n      .append('g')\n      .data([{ x: 20, y: 20, r: 1, scale: 1 }])\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('transform', 'translate(0,0)');\n\n    const tempImg = new Image();\n    tempImg.onload = () => {\n      const aspectRatio = tempImg.width / tempImg.height;\n      const height =\n        tempImg.height > Number(this.selection.style('height').replace('px', ''))\n          ? Number(this.selection.style('height').replace('px', '')) - 40\n          : tempImg.height;\n      const width =\n        height === Number(this.selection.style('height').replace('px', '')) - 40\n          ? (Number(this.selection.style('height').replace('px', '')) - 40) * aspectRatio\n          : tempImg.width;\n      group\n        .append('image')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', height)\n        .attr('width', width)\n        .attr('preserveAspectRatio', 'none')\n        .attr('xlink:href', image.toString());\n\n      group\n        .append('rect')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('width', 20)\n        .attr('height', 20)\n        .style('opacity', 0)\n        .attr('fill', (d) => {\n          return '#cccccc';\n        })\n        .call(\n          drag()\n            .subject(() => {\n              const p = [event.x, event.y];\n              return [p, p];\n            })\n            .on('start', () => {\n              event.on('drag', function (d) {\n                const cursor = select(this);\n                const cord = mouse(this);\n\n                d.x += cord[0] - Number(cursor.attr('width')) / 2;\n                d.y += cord[1] - Number(cursor.attr('height')) / 2;\n                select(this.parentNode).attr('transform', () => {\n                  return (\n                    'translate(' + [d.x, d.y] + '),rotate(' + 0 + ',160, 160),scale(' + d.scale + ',' + d.scale + ')'\n                  );\n                });\n              });\n            })\n        );\n      group\n        .on('mouseover', function () {\n          select(this).select('rect').style('opacity', 1.0);\n        })\n        .on('mouseout', function () {\n          select(this).select('rect').style('opacity', 0);\n        });\n      // this.undoStack.push({ type: ActionType.Image, image: group.node() });\n    };\n    tempImg.src = image.toString();\n  }\n\n  private _unsubscribe(subscription: Subscription): void {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n  }\n\n  private svgString2Image(\n    svgString: string,\n    width: number,\n    height: number,\n    format: string,\n    callback: (img: string) => void\n  ) {\n    // set default for format parameter\n    format = format || 'png';\n    // SVG data URL from SVG string\n    const svgData = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgString)));\n    // create canvas in memory(not in DOM)\n    const canvas = document.createElement('canvas');\n    // get canvas context for drawing on canvas\n    const context = canvas.getContext('2d');\n    // set canvas size\n    canvas.width = width;\n    canvas.height = height;\n    // create image in memory(not in DOM)\n    const image = new Image();\n    // later when image loads run this\n    image.onload = () => {\n      // async (happens later)\n      // clear canvas\n      context.clearRect(0, 0, width, height);\n      // draw image with SVG data to canvas\n      context.drawImage(image, 0, 0, width, height);\n      // snapshot canvas as png\n      const pngData = canvas.toDataURL('image/' + format);\n      // pass png data URL to callback\n      callback(pngData);\n    }; // end async\n    // start loading SVG data into in memory image\n    image.src = svgData;\n  }\n\n  private saveAsSvg(svgNode): string {\n    svgNode.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n\n    // Set width and height for svg element\n    svgNode.setAttribute('width', Number(this.selection.style('width').replace('px', '')));\n    svgNode.setAttribute('height', Number(this.selection.style('height').replace('px', '')));\n\n    const serializer = new XMLSerializer();\n    let svgString = serializer.serializeToString(svgNode);\n    svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink='); // Fix root xlink without namespace\n    svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href');\n    return svgString;\n  }\n\n  private download(url: string, name: string): void {\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('visibility', 'hidden');\n    link.download = name || 'new white-board';\n    document.body.appendChild(link);\n    link.click();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgWhiteboardComponent } from './ng-whiteboard.component';\n\n@NgModule({\n  declarations: [NgWhiteboardComponent],\n  imports: [],\n  exports: [NgWhiteboardComponent]\n})\nexport class NgWhiteboardModule {}\n"],"names":["Subject","Injectable","EventEmitter","line","curveBasis","select","drag","event","mouse","Component","ViewChild","Input","Output","NgModule"],"mappings":"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"}