!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("signature_pad/dist/signature_pad"),require("@angular/common")):"function"==typeof define&&define.amd?define("@ng-plus/signature-pad",["exports","@angular/core","signature_pad/dist/signature_pad","@angular/common"],n):n((t["ng-plus"]=t["ng-plus"]||{},t["ng-plus"]["signature-pad"]={}),t.ng.core,null,t.ng.common)}(this,function(t,n,e,i){"use strict";var o=function(){function t(){this.points=[],this.pointsChange=new n.EventEmitter,this.editable=!0,this.emitOnDragEnd=!1,this.penColor="black",this.backgroundColor="transparent",this.showDoneButton=!0,this.doneButtonText="Done",this.doneButtonClass="btn btn-primary",this.showClearButton=!0,this.clearButtonText="Clear",this.clearButtonClass="btn btn-default",this.format="blob",this.height=150,this.width=600,this.done=new n.EventEmitter,this.cleared=new n.EventEmitter,this.responsive=!0}return t.prototype.ngOnInit=function(){},t.prototype.ngAfterViewInit=function(){var t=this;this.responsive&&(window.addEventListener("resize",function(){t.resizeCanvas()}),this.resizeCanvas()),this.initPad()},t.prototype.initPad=function(){var t=this;this.signaturePad=new e(this.canvasRef.nativeElement,{penColor:this.penColor,backgroundColor:this.backgroundColor}),this.signaturePad.penColor=this.penColor,this.editable?this.signaturePad.on():this.signaturePad.off(),this.signaturePad.onEnd=function(){t.emitPoints(),t.emitOnDragEnd&&t.emitBlob()},this.applyPoints(),this.emitOnDragEnd&&this.emitBlob()},t.prototype.clearPad=function(){this.signaturePad.clear(),this.cleared.emit(),this.emitPoints(),this.emitOnDragEnd&&this.emitBlob()},t.prototype.applyPoints=function(){if(this.points&&this.signaturePad){this.signaturePad.clear();var n=this.canvasRef.nativeElement.offsetWidth/this.width,t=JSON.parse(JSON.stringify(this.points));t.forEach(function(t){t.points.forEach(function(t){t.x=t.x*n,t.y=t.y*n})}),this.signaturePad.fromData(t)}},t.prototype.emitPoints=function(){var n=this.canvasRef.nativeElement.offsetWidth/this.width,t=JSON.parse(JSON.stringify(this.signaturePad.toData()));t.forEach(function(t){t.points.forEach(function(t){t.x=t.x/n,t.y=t.y/n})}),this.pointsChange.emit(t)},t.prototype.emitPointsAndBlob=function(){this.emitPoints(),this.emitBlob()},t.prototype.emitBlob=function(){var n=this;switch(this.format){case"base64":this.done.emit(this.signaturePad.toDataURL());break;case"json":this.done.emit(this.signaturePad.toData());break;default:this.canvasRef.nativeElement.toBlob(function(t){n.done.emit(t)})}},t.prototype.resizeCanvas=function(){var t=this.canvasRef.nativeElement;if(t){var n=t.closest(".signature-pad");if(n){var e=n.offsetWidth,i=n.offsetWidth/(this.width/this.height);t.setAttribute("width",""+e),t.setAttribute("height",""+i),this.applyPoints()}}},t}();o.decorators=[{type:n.Component,args:[{selector:"ng-signature-pad",template:'<div class="signature-pad">\n    <canvas\n        [width]="width"\n        [height]="height"\n        #canvas></canvas>\n    <div class="buttons">\n        <button [class]="doneButtonClass" *ngIf="showDoneButton" (click)="emitPointsAndBlob()">{{ doneButtonText }}</button>\n        <button [class]="clearButtonClass" *ngIf="showClearButton" (click)="clearPad()">{{ clearButtonText }}</button>\n    </div>\n</div>\n',styles:[".signature-pad canvas{background:#f2f2f2}.signature-pad .btn{margin-right:.25em}"]}]}],o.ctorParameters=function(){return[]},o.propDecorators={canvasRef:[{type:n.ViewChild,args:["canvas",{read:n.ElementRef}]}],points:[{type:n.Input}],pointsChange:[{type:n.Output}],editable:[{type:n.Input}],emitOnDragEnd:[{type:n.Input}],penColor:[{type:n.Input}],backgroundColor:[{type:n.Input}],showDoneButton:[{type:n.Input}],doneButtonText:[{type:n.Input}],doneButtonClass:[{type:n.Input}],showClearButton:[{type:n.Input}],clearButtonText:[{type:n.Input}],clearButtonClass:[{type:n.Input}],format:[{type:n.Input}],height:[{type:n.Input}],width:[{type:n.Input}],done:[{type:n.Output}],cleared:[{type:n.Output}],responsive:[{type:n.Input}]};var s=function(){};s.decorators=[{type:n.NgModule,args:[{imports:[i.CommonModule],declarations:[o],exports:[o]}]}],t.SignaturePadComponent=o,t.SignaturePadModule=s,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ng-plus-signature-pad.umd.min.js.map
