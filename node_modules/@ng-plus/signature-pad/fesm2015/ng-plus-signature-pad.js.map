{
  "version": 3,
  "file": "ng-plus-signature-pad.js",
  "sources": [
    "ng://@ng-plus/signature-pad/projects/signature-pad/src/lib/signature-pad.module.ts",
    "ng://@ng-plus/signature-pad/projects/signature-pad/src/lib/signature-pad.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { SignaturePadComponent } from './signature-pad.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SignaturePadComponent],\n  exports: [SignaturePadComponent]\n})\nexport class SignaturePadModule { }\n",
    "import {AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from \"@angular/core\";\nimport * as SignaturePad from 'signature_pad/dist/signature_pad';\n\n@Component({\n    selector: 'ng-signature-pad',\n    template: `<div class=\"signature-pad\">\r\n    <canvas\r\n        [width]=\"width\"\r\n        [height]=\"height\"\r\n        #canvas></canvas>\r\n    <div class=\"buttons\">\r\n        <button [class]=\"doneButtonClass\" *ngIf=\"showDoneButton\" (click)=\"emitPointsAndBlob()\">{{ doneButtonText }}</button>\r\n        <button [class]=\"clearButtonClass\" *ngIf=\"showClearButton\" (click)=\"clearPad()\">{{ clearButtonText }}</button>\r\n    </div>\r\n</div>\r\n`,\n    styles: [`.signature-pad canvas{background:#f2f2f2}.signature-pad .btn{margin-right:.25em}`]\n})\nexport class SignaturePadComponent implements OnInit, AfterViewInit {\n\n    private signaturePad: SignaturePad;\n    @ViewChild('canvas', {read: ElementRef}) canvasRef: ElementRef;\n\n    @Input() points: any[] = [];\n    @Output() pointsChange = new EventEmitter<any>();\n\n    @Input() editable = true;\n    @Input() emitOnDragEnd = false;\n\n    @Input() penColor = 'black';\n    @Input() backgroundColor = 'transparent';\n\n    @Input() showDoneButton = true;\n    @Input() doneButtonText = 'Done';\n    @Input() doneButtonClass = 'btn btn-primary';\n    @Input() showClearButton = true;\n    @Input() clearButtonText = 'Clear';\n    @Input() clearButtonClass = 'btn btn-default';\n\n    @Input() format: 'blob' | 'base64' | 'json' = 'blob';\n\n    @Input() height = 150;\n    @Input() width = 600;\n\n    @Output() done = new EventEmitter();\n    @Output() cleared = new EventEmitter();\n\n    @Input() responsive = true;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n        // Resize Canvas to full screen:\n        if (this.responsive) {\n            window.addEventListener('resize', () => {\n                this.resizeCanvas();\n            });\n            this.resizeCanvas();\n        }\n        this.initPad();\n    }\n\n    initPad() {\n        this.signaturePad = new SignaturePad(this.canvasRef.nativeElement, {\n            penColor: this.penColor,\n            backgroundColor: this.backgroundColor\n        });\n        this.signaturePad.penColor = this.penColor;\n\n        if (this.editable) {\n            this.signaturePad.on();\n        } else {\n            this.signaturePad.off();\n        }\n\n        this.signaturePad.onEnd = () => {\n            this.emitPoints();\n            if (this.emitOnDragEnd) {\n                this.emitBlob();\n            }\n        };\n\n        this.applyPoints();\n        if (this.emitOnDragEnd) {\n            this.emitBlob();\n        }\n    }\n\n    clearPad() {\n        this.signaturePad.clear();\n        this.cleared.emit();\n        this.emitPoints();\n        if (this.emitOnDragEnd) {\n            this.emitBlob();\n        }\n    }\n\n    applyPoints() {\n\n        if (!this.points || !this.signaturePad) { return; }\n\n        this.signaturePad.clear();\n\n        const multiplier = this.canvasRef.nativeElement.offsetWidth / this.width;\n\n        const points = JSON.parse(JSON.stringify(this.points));\n        points.forEach(group => {\n            group.points.forEach(pt => {\n                pt.x = pt.x * multiplier;\n                pt.y = pt.y * multiplier;\n            });\n        });\n        this.signaturePad.fromData(points);\n    }\n\n    emitPoints() {\n        const multiplier = this.canvasRef.nativeElement.offsetWidth / this.width;\n        const points = JSON.parse(JSON.stringify(this.signaturePad.toData()));\n        points.forEach(group => {\n            group.points.forEach(pt => {\n                pt.x = pt.x / multiplier;\n                pt.y = pt.y / multiplier;\n            });\n        });\n        this.pointsChange.emit(points);\n    }\n\n    emitPointsAndBlob() {\n        this.emitPoints();\n        this.emitBlob();\n    }\n\n    emitBlob() {\n\n        switch (this.format) {\n\n            case 'base64':\n                this.done.emit(this.signaturePad.toDataURL());\n                break;\n\n            case 'json':\n                this.done.emit(this.signaturePad.toData());\n                break;\n\n            default:\n                this.canvasRef.nativeElement.toBlob((blob) => {\n                    this.done.emit(blob);\n                });\n                break;\n        }\n\n    }\n\n\n    resizeCanvas() {\n\n        const canvas = this.canvasRef.nativeElement;\n        if (!canvas) { return; }\n\n        const pad = canvas.closest('.signature-pad') as HTMLElement;\n        if (!pad) { return; }\n\n        const w = pad.offsetWidth;\n        const h = pad.offsetWidth / (this.width / this.height);\n\n        canvas.setAttribute('width', `${w}`);\n        canvas.setAttribute('height', `${h}`);\n\n        this.applyPoints();\n\n    }\n\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
